@model Serene_AMS.ViewModels.ProcureVM

<form name="formupdateitem">


    <div class="modal-content responsive" id="itemmodal">
        <div class="modal-header">
            <h4 class="modal-title">Edit Storage Location</h4>
            <button type="button" class="close" data-dismiss="modal">&times;</button>

        </div>

        <div class="modal-body" style="overflow: auto">

            @Html.EditorFor(model => model.ItemId, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })

            <div class="form-group">
                @Html.LabelFor(model => model.ItemType, "Item Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ItemType, (SelectList)ViewBag.getItemtypelist, "Select City", new { @id = "getId", @class = "form-control select2_demo_2" })
                    @Html.ValidationMessageFor(model => model.ItemType, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.StorageLocation, "Item Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.StorageLocation, (SelectList)ViewBag.getSLlist, "Select City", new { @id = "getId", @class = "form-control select2_demo_2" })
                    @Html.ValidationMessageFor(model => model.StorageLocation, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ItemPrice, "Price per One Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ItemPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ReorderPoint, "ReorderPoint", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReorderPoint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReorderPoint, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn btn-primary" onclick="EditItems()">Submit</button>
                </div>
            </div>
        </div>


    </div>

</form>



