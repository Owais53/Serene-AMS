@model Serene_AMS.ViewModels.ProcureVM
@{
    ViewBag.Title = "CreateVendors";
}

<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("Index","Home")">Dashboard</a>
        </li>
        <li class="breadcrumb-item active">
            Create Item Master
        </li>
    </ol>
</nav>

<div class="ibox">

    <div class="ibox-body">

        @using (Html.BeginForm("CreateVendors", "Admin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="form-group">
                @Html.LabelFor(model => model.VendorType, "Vendor Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.VendorType, (SelectList)ViewBag.getVendortypelist, "Select Vendor Type", new { @id = "getId", @class = "form-control select2_demo_2" })
                    @Html.ValidationMessageFor(model => model.VendorType, "Please Select Vendor Type", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.VendorName, "Vendor Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.VendorName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VendorName, "Please Entor Vendor Name", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Contact, "Contact", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contact, "Please Enter Contact", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Address, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "Please Enter Address", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TypeId, "Item Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.TypeId, (SelectList)ViewBag.getItemtypelist, "Select Item Type", new { @id = "getId", @class = "form-control select2_demo_2", @onchange = "javascript: ddlgettypeid(this);" })
                    @Html.ValidationMessageFor(model => model.VendorType, "Please Select Vendor Type", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2">Select Items which Vendor Delivers</label>
                <select id="ddListofitems" multiple="multiple" onchange="javascript: showCheckboxes();">
                    @foreach (var item in ViewBag.Getitem)
                    {
                        <option value="@item.ItemId">@item.ItemName</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-primary" />
                </div>
            </div>
        </div>
        }
    
</div>
 </div>
@section scripts{

    <script>
       $(function () {
            var successMessage = '@TempData["SuccessMessage1"]'
            if (successMessage != '')
                alertify.success(successMessage);
        });

    </script>
    <script>
        $(function () {
            var errorMessage = '@TempData["ErrorMessage1"]'
            if (errorMessage != '')
                alertify.error(errorMessage);
        });

    </script>
    <script type="text/javascript">
        $(function () {
            $("#ddListofitems").multiselect({
                includeSelectAllOption: true
            });
        });
    </script>
    <script type="text/javascript">
        var expanded = false;

        function ddlgettypeid(id) {

            $("#getTypeid").val(id.value);
        }
        function showCheckboxes() {
            var checkboxes = document.getElementById("ddListofitems");
            if (!expanded) {
                checkboxes.style.display = "block";

                expanded = true;
            } else {
                checkboxes.style.display = "none";
                expanded = false;
            }
        }
    </script>

}

