@model Serene_AMS.ViewModels.ApplyVM
@{


    ViewBag.Title = "Apply";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

   <div class="unit-5 overlay" style="background-image: url('../../Website/images/hero_bg_2.jpg');">
      <div class="container text-center">
        <h2 class="mb-0">Apply for job</h2>
        <p class="mb-0 unit-6"><a href="index.html">Home</a> <span class="sep">></span> <span>Apply</span></p>
      </div>
    </div>

    
    

    <div class="site-section bg-light">
      <div class="container">
        <div class="row">
       
            <div class="col-md-12 col-lg-8 mb-5">
                @using (Html.BeginForm("Apply", "Recruitment", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                    @Html.AntiForgeryToken()

                    <form id="form-sample-1" novalidate="novalidate" class="p-5 bg-white">
                        <fieldset>
                            <div class="row form-group">
                                <div class="col-md-12 mb-3 mb-md-0">
                                    <label class="font-weight-bold" for="fullname">Full Name</label>
                                    @Html.EditorFor(model => model.ApplicantName, new { htmlAttributes = new { @id = "getname", @class = "form-control", @name = "name", @placeholder = "Full Name" } })
                                    @Html.ValidationMessageFor(model => model.ApplicantName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label class="font-weight-bold" for="email">Email</label>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @id = "getEmail", @class = "form-control", @name = "email", @placeholder = "Email Address" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label class="font-weight-bold" for="email">Contact</label>
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @id = "getphone", @class = "form-control", @name = "phone" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label class="font-weight-bold" for="message">Date of Birth</label>
                                    <span class="input-group-addon bg-white"><i class="fa fa-calendar"></i></span>
                                    @Html.EditorFor(model => model.Dob, new { @class = "form-control", placeholder = "Date of Birth", @readonly = "true" })
                                    @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label class="font-weight-bold" for="message">Gender</label>
                                    <label class="ui-radio ui-radio-inline">
                                        @Html.RadioButtonFor(model => model.Gender, "Male")
                                        <span class="input-span"></span>Male
                                    </label>
                                    <label class="ui-radio ui-radio-inline">
                                        @Html.RadioButtonFor(model => model.Gender, "Female")
                                        <span class="input-span"></span>Female
                                    </label>
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label class="font-weight-bold" for="message">Address</label>
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @id = "getreasonreq", @class = "form-control", @name = "txtreason" } })
                                </div>
                            </div>
                            <div class="row form-group">
                                <div class="col-md-12">
                                    <label class="font-weight-bold" for="message">Select CV</label>
                                    <input type="file" accept=".docx,.pdf" name="postedFile" />
                                    @Html.ValidationMessage("CustomError")
                                </div>
                            </div>


                            <div class="row form-group">
                                <div class="col-md-12">
                                    <input type="submit" value="Submit" id="btnadd" class="btn btn-primary  py-2 px-4">
                                </div>
                            </div>
                        </fieldset>

                    </form>
                }
                </div>
            </div>
          </div>
        </div>

   

@section scripts{

    
    <script>
    $(function () {
    var successMessage = '@TempData["SuccessMessage1"]'
    if (successMessage != '')
    alertify.success(successMessage);
    });
    </script>
    <script>
        $(function () {
            var errorMessage = '@TempData["ErrorMessage1"]'
            if (errorMessage != '')
                alertify.error(errorMessage);
        });
    </script>

    <script type="text/javascript">
        $(function () {
            $('input[type=datetime]').datepicker({
                dateFormat: "dd/M/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-60:+0"
            });

        });




    </script>



}