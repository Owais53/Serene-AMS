@model Serene_AMS.ViewModels.ProcureVM
@{
    /**/

    ViewBag.Title = "Home Page";
}
<nav>
    <ol class="breadcrumb">
        <li class="breadcrumb-item active">
            Dashboard
        </li>
    </ol>
</nav>
<div class="ibox">

    <div class="ibox-body">

        @if (Session["RoleName"].ToString() == "Recruitment Manager")
        {


            <table id="tblcandid1" class="table table-striped table-hover responsive table-responsive">
                <thead>
                    <tr style="background-color:#0094ff; color:#ecf0f1">
                        <th>Name</th>
                        <th>Contact</th>
                        <th>Email</th>
                        <th>Date of Birth</th>
                        <th>Gender</th>
                        <th>Status</th>
                        <th>Submitted on</th>
                        <th>CV</th>
                    </tr>
                </thead>

                <tfoot>
                    <tr>
                        <th>Name</th>
                        <th>Contact</th>
                        <th>Email</th>
                        <th>Date of Birth</th>
                        <th>Gender</th>
                        <th>Status</th>
                        <th>Submitted on</th>
                        <th>CV</th>
                    </tr>
                </tfoot>


            </table>
        }
        <div class="row">
            <div class="col-lg-3 col-md-6">
                <div class="ibox bg-success color-white widget-stat">
                    <div class="ibox-body">
                        <h2 class="m-b-5 font-strong" id="getempcount"></h2>
                        <div class="m-b-5">Total Employees</div><i class="ti-dashboard widget-stat-icon"></i>
                        <div><i class="fa fa-bookmark m-r-5"></i><small></small></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="ibox bg-info color-white widget-stat">
                    <div class="ibox-body" id="appendleave">
                        <a href="~/Admin/LeaveList" id="linktoleavelist">
                            <h2 class="m-b-5 font-strong" id="getleavescount" style="color:white;"></h2>
                            <div class="m-b-5" style="color:white;">Leaves Left</div><i class="ti-agenda widget-stat-icon" style="color:white;"></i>
                            <div><i class="fa fa-address-card m-r-5" style="color:white;"></i><small style="color:white;">View Leaves</small></div>
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="ibox bg-warning color-white widget-stat">
                    <div class="ibox-body">
                        <h2 class="m-b-5 font-strong" id="gettotalexp"></h2>
                        <div class="m-b-5">TOTAL Expense</div><i class="fa fa-money widget-stat-icon"></i>
                        <div><i class="fa fa-money m-r-5"></i><small>Current Month</small></div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="ibox bg-danger color-white widget-stat">
                    <div class="ibox-body">
                        <a href="~/Admin/UserList">
                            <h2 class="m-b-5 font-strong" id="getusercount" style="color:white;"></h2>
                            <div class="m-b-5" style="color:white;">Total USERS</div><i class="ti-user widget-stat-icon" style="color:white;"></i>
                            <div><i class="fa fa-address-book m-r-5" style="color:white;"></i><small style="color:white;">View Users</small></div>
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-lg-8">
        <div class="ibox">
            <div class="ibox-body">
                <div>
                    @Html.DropDownListFor(model => model.year, (SelectList)ViewBag.getyearlist, "Select Year", new { @id = "ddl", @class = "form-control", @onchange = "javascript: ddlyear(this);" })


                </div>
                <div id="container"></div>
            </div>
        </div>
    </div>
</div>
<div class="row">


<div class="col-lg-8">
    <div class="ibox">
        <div class="ibox-body">
           
                <div id="piechart"></div>
            
        </div>
    </div>
</div>
    </div>
@section scripts{

    <script type="text/javascript">
     $(function () {
            var successMessage = '@TempData["SuccessMessage101"]'
            if (successMessage != '')
                alertify.success(successMessage);
      });
    var Popup, dataTable2;

    $(function () {

        dataTable2 = $('#tblcandid1').DataTable({
            pageLength: 10,
            "ajax": {
                "url": '/recruitment/GetCandidateList',
                "type": "get",
                "datatype": "json"
            },
            "columns": [

                { "data": "ApplicantName", "authowidth": false },
                { "data": "Phone", "authowidth": false },
                { "data": "Email", "authowidth": false },
                {
                    "data": "Dob", "render": function (mydata) {
                        var date = new Date(parseInt(mydata.substr(6)));
                        var month = date.getMonth() + 1;
                        return date.getDate() + "/" + month + "/" + date.getFullYear();
                    },
                },
                { "data": "Gender", "authowidth": false },
                {
                    "data": "Status", "render": function (data) {
                        if (data == "Pending") {
                            return "<label class='badge-primary'>" + data + "</label>"

                        }
                        else if (data == "Rejected") {
                            return "<label class='badge-danger'>" + data + "</label>"

                        }
                        else {
                            return "<label class='badge-success'>" + data + "</label>"

                        }
                    },
                },
                {
                    "data": "Submittedon", "render": function (data) {
                        var date = new Date(parseInt(data.substr(6)));
                        var month = date.getMonth() + 1;
                        return date.getFullYear() + "/" + month + "/" + date.getDate();
                    },

                },
                {
                    "data": "CV", "render": function (data) {
                        return '<a href="/CV/' + data + '">View</a>'
                    },
                }



            ]


        });

        $.get("/Notifications/GetUserscount", function (res) {
            $("#getusercount").html(res);
        });
        $.get("/Notifications/GetEmpcount", function (res) {
            $("#getempcount").html(res);
        });
        $.get("/Notifications/GetExp", function (res) {
            $("#gettotalexp").html(res);
        });
        $.get("/Notifications/GetLeavesCount", function (res) {
            if (res == 0) {

                $("#linktoleavelist").remove();
                var $card = $('#appendleave');
                $card.append(
                    '<div id="removecard"' +
                    '<h3 class="m-b-5 font-strong" id="getleavescount" style="color:white;">Not Assigned</h3>' +
                    ' <div class="m-b-5" style="color:white;">Leaves Left</div><i class="ti-agenda widget-stat-icon" style="color:white;"></i>' +
                    '<div><i class="fa fa-address-card m-r-5" style="color:white;"></i><small style="color:white;">View Leaves</small></div>'
                    + '</div>'
                );

            }
            else {
                $("#removecard").remove();
                $("#getleavescount").html(res);

            }
        });

        $.getJSON("/Home/GetLineChartData", function (res) {
            var Months = []
            var amount = []
            for (var i = 0; i < res.length; i++) {
                Months.push(res[i].month);
                amount.push(res[i].total);
            }

        Highcharts.chart('container', {
            chart: {
                type: 'line'
            },
            title: {
                text: 'Total Expenses'
            },
            subtitle: {
                text: 'Monthly Expense'
            },
            xAxis: {
                categories: Months
            },
            yAxis: {
                title: {
                    text: 'Amount'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            series: [{
                name: 'Total Expenses',
                data: amount

            }]
          });
        });
        $.getJSON("/Home/GetBarChartData", function (res) {
            var item = []
            var availbleqty = []
            var qualityqty = []
            var reorderpointqty=[]
            for (var i = 0; i < res.length; i++) {
                item.push(res[i].ItemName);
                availbleqty.push(res[i].AvailableStock);
                qualityqty.push(res[i].QualityStock);
                reorderpointqty.push(res[i].ReorderPoint);
            }

            Highcharts.chart('piechart', {
                chart: {
                   
                    type: 'column'
                },
                title: {
                    text: 'Total Stock per Item '
                },
                xAxis: {
                    categories: item
                },
                yAxis: {
                    min: 0,
                    title: {
                        text:'Total Stock'
                    },
                
                  stackLabels: {
                    enabled: true,
                    style: {
                        fontWeight: 'bold',
                        color: (
                            Highcharts.defaultOptions.title.style &&
                            Highcharts.defaultOptions.title.style.color

                        ) || 'gray'
                    }
                 } 
                },
                length: {
                    align: 'right',
                    x: -30,
                    verticalAlign: 'top',
                    y: 25,
                    floating: true,
                    backgroundColor: '#CCC',
                    borderWidth: 1,
                    shadow: false
                },
                tooltip: {
                    headerFormat:'<b>{point.x}</br><br/>',
                    pointFormat:'{series.name}:{point.y}</b>'
                },
              
                plotOptions: {
                    column: {
                        stacking: 'normal',
                        dataLabels: {
                            enabled: true
                        }
                    }
                },
                series: [{
                    name: 'Available Stock',
                    data: availbleqty

                }, {
                        name: 'Quality Inspection Stock',
                        data: qualityqty
                    },
                    {
                        name: 'Reorder Point',
                        data: reorderpointqty
                    }]
            });
        });

    });



                function ddlyear(id) {

                    $.getJSON("/Home/GetLineChartData", { y: id.value }, function (res) {
                        var Months = []
                        var amount = []
                        for (var i = 0; i < res.length; i++) {
                            Months.push(res[i].month);
                            amount.push(res[i].total);
                        }

                        Highcharts.chart('container', {
                            chart: {
                                type: 'line'
                            },
                            title: {
                                text: 'Total Expenses'
                            },
                            subtitle: {
                                text: 'Monthly Expense'
                            },
                            xAxis: {
                                categories: Months
                            },
                            yAxis: {
                                title: {
                                    text: 'Amount'
                                }
                            },
                            plotOptions: {
                                line: {
                                    dataLabels: {
                                        enabled: true
                                    },
                                    enableMouseTracking: false
                                }
                            },
                            series: [{
                                name: 'Total Expenses',
                                data: amount

                            }]
                        });
                    });

                }

    </script>

}
